syntax = "proto3";
package proto;

option java_multiple_files = true;


option csharp_namespace = "Proto.Generated.Conf";
option java_package = "proto.generated.conf";



import "proto/setting.proto";



message PConf {
  PConfInfo PInfo = 1;

  repeated PHardware PHControls = 2;
  repeated PHardware PHTemps = 3;
  repeated PHardware PHFans = 4;

  repeated PIControl PIControls = 5;
  repeated PIBehavior PIBehaviors = 6;
  repeated PISensor PITemps = 7;
  repeated PISensor PIFans = 8;
}



/*
    type ***********************
 */

enum PHTypes {
  H_C_FAN = 0;
  H_S_FAN = 1;
  H_S_TEMP = 2;
}


enum PIControlTypes {
  I_C_FAN = 0;
}

enum PIBehaviorTypes {
  I_B_FLAT = 0;
  I_B_LINEAR = 1;
  I_B_TARGET = 2;
}

enum PISensorTypes {
  I_S_FAN = 0;
  I_S_TEMP = 1;
  I_S_CUSTOM_TEMP = 2;
}

/*
    *************************
 */



/*
    Hardware *****************
 */

message PHardware {
  string PId = 1;
  PHTypes PType = 2;
}


/*
    ****************************
 */



message PIControl {
  string PName = 1;
  string PId = 2;
  PIControlTypes PType = 3;
  NullableId PIBehaviorId = 4;
  bool PIsAuto = 5;
  NullableId PHControlId = 6;
}


/*
    Behavior **********************
 */

message PIBehavior {
  string PName = 1;
  string PId = 2;
  PIBehaviorTypes PType = 3;

  oneof kind{
    PFlat PFlat = 4;
    PLinear PLinear = 5;
    PTarget PTarget = 6;
  }
}

message PFlat {

}


message PLinear {
  NullableId PHTempId = 1;

  int32 PMinTemp = 2;
  int32 PMaxTemp = 3;
  int32 PMinFanSpeed = 4;
  int32 PMaxFanSpeed = 5;
}


message PTarget {
  NullableId PHTempId = 1;

  int32 PIdleTemp = 2;
  int32 PLoadTemp = 3;
  int32 PIdleFanSpeed = 4;
  int32 PLoadFanSpeed = 5;
}

/*
    ***********************
 */


/*
    Item Sensors
 */


message PISensor {
  string PName = 1;
  string PId = 2;
  PISensorTypes PType = 3;

  oneof kind {
    PLinear PIFan = 4;
    PLinear PITemp = 5;
    PLinear PICustomTemp = 6;
  }
}

message PIFan {
  NullableId PHFanId = 1;
}

message PITemp {
  NullableId PHTempId = 1;
}


message PIcustomTemp {
  PCustomTempTypes PType = 1;
  repeated string PHTempIds = 2;
}

enum PCustomTempTypes {
  AVERAGE = 0;
  MAX = 1;
  MIN = 2;
}